let express,ApolloServer,typeDefs,resolvers;_c45‍.w("express",[["default",["express"],function(v){express=v}]]);_c45‍.w("apollo-server-express",[["ApolloServer",["ApolloServer"],function(v){ApolloServer=v}]]);_c45‍.w("./graphql/typeDefs",[["default",["typeDefs"],function(v){typeDefs=v}]]);_c45‍.w("./graphql/resolvers",[["default",["resolvers"],function(v){resolvers=v}]]);




const app = express();

const PORT =  process.env.PORT ? parseInt(process.env.PORT) : 8000;
const HOSTNAME = process.env.HOSTNAME || '127.0.0.1';

async function startServer() {
    const server = new ApolloServer({
        typeDefs,
        resolvers,
    });

    await server.start();

    server.applyMiddleware({
        app,
        cors: {
            origin: '*' // `http://${HOSTNAME}:3000`
        },
        bodyParserConfig: true,
    });
};

startServer();
app.listen(PORT, HOSTNAME, () => {
    console.log(`Server listening at ${HOSTNAME}:${PORT}`);
});
