let rejects,readFile,writeFile,resolve;_717‍.x([["default",()=>_717‍.o]]);_717‍.w("assert",[["rejects",["rejects"],function(v){rejects=v}]]);_717‍.w("fs",[["readFile",["readFile"],function(v){readFile=v}],["writeFile",["writeFile"],function(v){writeFile=v}]]);_717‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);



function createRepository (name) {
    const path = resolve(__dirname, `../../data/${name}.json`);
    
    return {
        read: () => new Promise((resolve, reject) => {
            readFile(path, (error, data) => {
                if(error) {
                    reject(error);
                    return;
                }

                resolve(JSON.parse(data));
            })
        }),

        write: (data) => new Promise(() => {
            writeFile(path, JSON.stringify(data), (error) => {
                if(error) {
                    reject(error);
                    return;
                }

                resolve();
            })
        })
    } 
}

_717‍.d(createRepository);